plugins {
    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.kapt" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.allopen" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.noarg" version "${kotlinVersion}"
    id "com.github.johnrengelman.shadow" version "${shadowVersion}"
    id "application"
}



version "0.1"
group "hackathon.backend.kotlin"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

noArg {
    annotation("javax.persistence.Entity")
}

kapt {
    arguments {
        arg("micronaut.processing.incremental", true)
    }
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:${micronautVersion}")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    kapt platform("io.micronaut:micronaut-bom:${micronautVersion}")
    kapt "io.micronaut:micronaut-inject-java"
    implementation "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-validation"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonModuleKotlinVersion}"
    runtimeOnly "ch.qos.logback:logback-classic:${logbackClassicVersion}"
    testImplementation "io.micronaut.test:micronaut-test-kotest:${micronautKotestVersion}"
    testImplementation "io.mockk:mockk:${mockKVersion}"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:${kotestVersion}"
    testImplementation "io.kotest:kotest-assertions-core-jvm:${kotestVersion}"
    testImplementation "io.kotest:kotest-runner-console-jvm:${kotestVersion}"
    kaptTest platform("io.micronaut:micronaut-bom:${micronautVersion}")
    kaptTest "io.micronaut:micronaut-inject-java"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:${spekVersion}"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:${spekVersion}"
    compile "javax.annotation:javax.annotation-api"
    kapt "javax.persistence:javax.persistence-api:${javaxPersistenceApiVersion}"
    compile "org.apache.commons:commons-csv:${commonsCsvVersion}"
    compile "io.github.classgraph:classgraph:${classGraphVersion}"
    runtime group: 'mysql', name: 'mysql-connector-java', version: '${mysqlConnectorVersion}'
    compile 'io.micronaut.flyway:micronaut-flyway'
    kapt "io.micronaut.data:micronaut-data-processor:${micronautDataVersion}"
    implementation "io.micronaut.data:micronaut-data-hibernate-jpa:${micronautDataVersion}"
    implementation "io.micronaut.sql:micronaut-jdbc-hikari"
    implementation "io.micronaut.sql:micronaut-hibernate-jpa"
    runtimeOnly "com.h2database:h2"
    kapt("io.micronaut.configuration:micronaut-openapi:${micronautOpenApiVersion}")
    implementation("io.swagger.core.v3:swagger-annotations")
}

test.classpath += configurations.developmentOnly

mainClassName = "hackathon.backend.kotlin.ApplicationKt"

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

task stage(dependsOn: ['build', 'clean']) {
    build.mustRunAfter clean
}


task runUat(type: Exec, dependsOn: ['clean', 'assemble']) {
    assemble.mustRunAfter clean
    commandLine "java", "-Dmicronaut.environments=uat", "-jar", "build/libs/tms-${version}-all.jar"
}
